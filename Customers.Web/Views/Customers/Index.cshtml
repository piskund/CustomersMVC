@using Customers.Web.Models
@model Customers.Web.PagedList< Customers.Web.Models.Customer >
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Customers";
}
@if (Request.IsAuthenticated && (User.IsInRole(RoleNames.Administrator) || User.IsInRole(RoleNames.Manager)))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@Html.Partial("_SearchPartial")

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("First name", "Index", "Customers", new { sortOrder = ViewBag.FirstNameSortParm }, new { sortOrder = ViewBag.FirstNameSortParm })
            </th>
            <th>
                @Html.ActionLink("Last name", "Index", "Customers", new { sortOrder = ViewBag.LastNameSortParm }, new { sortOrder = ViewBag.LastNameSortParm })
            </th>
            <th>
                Email
            </th>
            <th>
                Phone number
            </th>
            <th>
                Login
            </th>
            <th>
                Password
            </th>
            <th>
                Is Disabled
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Login)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDisabled)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="row">
    <div class="col-md-4">
        <p>
            @Html.ActionLink("Previous", "Index", "Customers",
             new { sortOrder = ViewBag.CurrentSort , page = Model.PageIndex - 1, currentFilter = ViewBag.CurrentFilter, @class = $"btn btn-default {prevDisabled} btn" },
             new { sortOrder = ViewBag.CurrentSort, page = Model.PageIndex - 1, currentFilter = ViewBag.CurrentFilter, @class = $"btn btn-default {prevDisabled} btn" } )
        </p>
    </div>
    <div class="col-md-4">
        <p>
            @Html.ActionLink("Next", "Index", "Customers",
             new { sortOrder = ViewBag.CurrentSort, page = Model.PageIndex + 1, currentFilter = ViewBag.CurrentFilter, @class = $"btn btn-default {nextDisabled} btn" },
             new { sortOrder = ViewBag.CurrentSort, page = Model.PageIndex + 1, currentFilter = ViewBag.CurrentFilter, @class = $"btn btn-default {nextDisabled} btn" })
        </p>
    </div>
</div>
