@using Customers.Web.Models
@model PagedList<Customer>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div id="customersList">
@Html.LabelFor(model => model.Stats)
@Html.DisplayFor(model => model.Stats)


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
    Page @(Model.TotalPages < Model.PageIndex ? 0 : Model.PageIndex) of @Model.TotalPages    

    <table class="table">
        <tr>
            <th>
                @Html.CheckBoxFor(p => p.SelectAll)
            </th>
            <th>
                @Ajax.ActionLink(Html.DisplayNameFor(p => p.FirstOrDefault().Login).ToHtmlString(),
                    "Index",
                    new {sortOrder = ViewBag.LoginSortParm},
                    new AjaxOptions
                    {
                        UpdateTargetId = "customersList",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    })
            </th>
            <th>
                @Ajax.ActionLink(Html.DisplayNameFor(p => p.FirstOrDefault().FullName).ToHtmlString(),
                    "Index",
                    new {sortOrder = ViewBag.NameSortParm},
                    new AjaxOptions
                    {
                        UpdateTargetId = "customersList",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    })
            </th>
            <th>
                @Ajax.ActionLink(Html.DisplayNameFor(p => p.FirstOrDefault().Email).ToHtmlString(),
                    "Index",
                    new {sortOrder = ViewBag.EmailSortParm},
                    new AjaxOptions
                    {
                        UpdateTargetId = "customersList",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    })
            </th>
            <th>
                @Ajax.ActionLink(Html.DisplayNameFor(p => p.FirstOrDefault().PhoneNumber).ToHtmlString(),
                    "Index",
                    new {sortOrder = ViewBag.PhoneSortParm},
                    new AjaxOptions
                    {
                        UpdateTargetId = "customersList",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    })
            </th>
            <th>
                @Html.DisplayNameFor(p => p.FirstOrDefault().IsActive)
            </th>
            <th>
                Edit/Delete
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.CheckBoxFor(modelItem => item.IsChecked)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Login)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new {id = item.Id}) |
                    @Html.ActionLink("Delete", "Delete", new {id = item.Id})
                </td>
            </tr>
        }
        <tr>
            <td>
                @Ajax.ActionLink("Prev",
                    "Index",
                    new {sortOrder = ViewBag.CurrentSort, page = Model.PageIndex - 1, currentFilter = ViewBag.CurrentFilter},
                    new AjaxOptions
                    {
                        UpdateTargetId = "customersList",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    },
                    new { @class = $"btn btn-default {prevDisabled} btn"})
            </td>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                var isDisabled = Model.PageIndex == i ? "disabled" : "";
                <td>
                    @Ajax.ActionLink(i.ToString(),
                        "Index",
                        new {sortOrder = ViewBag.CurrentSort, page = i, currentFilter = ViewBag.CurrentFilter },
                        new AjaxOptions
                        {
                            UpdateTargetId = "customersList",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET"
                        },
                        new { @class = $"btn btn-default {isDisabled} btn" })
                </td>
            }
            <td>
                @Ajax.ActionLink("Next",
                    "Index",
                    new {sortOrder = ViewBag.CurrentSort, page = Model.PageIndex + 1, currentFilter = ViewBag.CurrentFilter},
                    new AjaxOptions
                    {
                        UpdateTargetId = "customersList",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    },
                    new { @class = $"btn btn-default {nextDisabled} btn" })
            </td>
        </tr>
    </table>
</div>
